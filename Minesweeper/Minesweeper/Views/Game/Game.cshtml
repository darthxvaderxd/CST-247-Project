@model Minesweeper.Services.Game.GameService

@{
    ViewBag.Title = "Minsweeper - Game";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="stopwatch">
    <div id="sw-time">00:00:00</div>
    <div id="timer">0</div>
</div>
<div id="gameBoard">
    @Html.Partial("~/Views/Shared/_GameBoard.cshtml")
</div>
<div class="game-menu">
    @using (Html.BeginForm("ResetGame", "Game"))
    {
        @Html.AntiForgeryToken()
        <button type="submit">
            Reset Board
        </button>
    }
    @using (Html.BeginForm("Index", "Home"))
    {
        @Html.AntiForgeryToken()
        <button type="submit">
            Main Menu
        </button>
    }
</div>

<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modal-title">Modal Header</h4>
            </div>
            <div class="modal-body">
                <p>Username: @Session["UserInfo"].ToString()</p>
                <p id="user-time"></p>
                <ol>
                    @foreach (var player in Model.highScoreList)
                    {
                        <li>@player.PlayerInitials @player.TimeSpanString</li>
                    }

                </ol>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
<script>
    var turns = 0;

    var sw = {
        // (A) INITIALIZE
        etime: null, // HTML time display
        init: function () {
            // (A1) GET HTML ELEMENTS
            sw.etime = document.getElementById("sw-time");
        },

        // (B) TIMER ACTION
        timer: null, // timer object
        now: 0, // current elapsed time
        tick: function () {
            // (B1) CALCULATE HOURS, MINS, SECONDS
            sw.now++;
            var remain = sw.now;
            var hours = Math.floor(remain / 3600);
            remain -= hours * 3600;
            var mins = Math.floor(remain / 60);
            remain -= mins * 60;
            var secs = remain;

            // (B2) UPDATE THE DISPLAY TIMER
            if (hours < 10) { hours = "0" + hours; }
            if (mins < 10) { mins = "0" + mins; }
            if (secs < 10) { secs = "0" + secs; }
            sw.etime.innerHTML = hours + ":" + mins + ":" + secs;
        },

        // (C) START!
        start: function () {
            sw.timer = setInterval(sw.tick, 1000);
        },

        // (D) STOP
        stop: function () {
            clearInterval(sw.timer);
            sw.timer = null;
        },

        // (E) RESET
        reset: function () {
            if (sw.timer != null) { sw.stop(); }
            sw.now = -1;
            sw.tick();
        }
    };

    if (sw.timer == null) {
        sw.init();
    };

</script>